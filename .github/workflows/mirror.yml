name: mirror

on:
  push:
    branches: [ main ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '0 */9 * * *'

jobs:
  mirror:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Free plan limit to 20 concurrent job
        ci_node_total: [20]
        ci_node_index: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
            - args: [--global, gulp, prettier, typescript]

      - run: pnpm build

      - name: Mirror
        uses: mujo-code/puppeteer-headful@v2
        env:
          WORKER_COUNT: ${{ matrix.ci_node_total }}
          WORKER_INDEX: ${{ matrix.ci_node_index }}
        with:
          args: node dist/index.js

      - name: Zip artifact
        run: zip data-${{ matrix.ci_node_index }}.zip data/*

      - uses: actions/upload-artifact@v2
        with:
          name: artifact-${{ matrix.ci_node_index }}
          path: data-${{ matrix.ci_node_index }}.zip

  # push:
  #   needs: [mirror]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v2

  #     - name: unzip artifact
  #       run: find . -name '*.zip' -exec sh -c 'unzip -d `dirname {}` {}' ';'

  #     - run: mkdir data
  #     - run: find . -name '*.json' -exec mv -nt data {} +
  
  #     - name: Push
  #       uses: s0/git-publish-subdir-action@develop
  #       env:
  #         REPO: self
  #         BRANCH: generated
  #         FOLDER: data
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         MESSAGE: "mirror"

  deploy:
    name: Deploy to Cloud Run
    needs: [mirror]
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}

    steps:
    - name: Login
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_email: ${{ secrets.GCP_EMAIL }}
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}

    - uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Configure Docker
      run: gcloud auth configure-docker --quiet

    - run: npx degit https://github.com/saltyaom/sirin sirin
    - run: mkdir data
    - run: cd data

    - name: Download artifact
      uses: actions/download-artifact@v2

    - name: unzip artifact
      run: find . -name '*.zip' -exec sh -c 'unzip -d `dirname {}` {}' ';'

    - run: mkdir tmp
    - name: Move file to temp folder
      run: find . -name '*.json' -exec mv -nt tmp {} +

    - name: Delete all zip
      run: find . -name "*.zip" -type f -delete
    
    - run: mv tmp/* .
    - run: rm -r tmp
    - run: cd ../..
    - run: mv data sirin/data

    # - name: Build Docker image
    #   run: docker build . -t ${{ secrets.IMAGE_NAME }}

    - name: Push
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        FOLDER: sirin
        BRANCH: cloud-run
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MESSAGE: "Cloud Run"

    # - name: Push Docker image
    #   run: docker push ${{ secrets.IMAGE_NAME }}

    # - name: Deploy Docker image
    #   run: gcloud run deploy ${{ secrets.GCP_PROJECT_ID }} --image ${{ secrets.IMAGE_NAME }} --region asia-southeast1 --platform managed --port 8080 --concurrency 1000 --min-instances 0 --max-instances 300 --memory 1Gi --timeout 40 --allow-unauthenticated --vpc-connector ${{ secrets.GCP_VPC_CONNECTOR }} --ingress internal-and-cloud-load-balancing
