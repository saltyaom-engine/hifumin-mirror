name: mirror

on:
  push:
    branches: [ main ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '0 */9 * * *'

jobs:
  mirror:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Free plan limit to 20 concurrent job
        ci_node_total: [20]
        ci_node_index: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
            - args: [--global, gulp, prettier, typescript]

      - run: pnpm build

      - name: Mirror
        uses: mujo-code/puppeteer-headful@v2
        env:
          WORKER_COUNT: ${{ matrix.ci_node_total }}
          WORKER_INDEX: ${{ matrix.ci_node_index }}
        with:
          args: node dist/index.js

      - name: Zip artifact
        run: zip data-${{ matrix.ci_node_index }}.zip data/*

      - uses: actions/upload-artifact@v2
        with:
          name: artifact-${{ matrix.ci_node_index }}
          path: data-${{ matrix.ci_node_index }}.zip

  # push:
  #   needs: [mirror]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v2

  #     - name: unzip artifact
  #       run: find . -name '*.zip' -exec sh -c 'unzip -d `dirname {}` {}' ';'

  #     - run: mkdir data
  #     - run: find . -name '*.json' -exec mv -nt data {} +
  
  #     - name: Push
  #       uses: s0/git-publish-subdir-action@develop
  #       env:
  #         REPO: self
  #         BRANCH: generated
  #         FOLDER: data
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         MESSAGE: "mirror"

  sirin-deploy:
    name: Deploy Sirin to deploys.app
    needs: [mirror]
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/sirin-3rd

    steps:
    - uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Download artifact
      uses: actions/download-artifact@v2

    - run: npx degit https://github.com/saltyaom/sirin sirin
    - run: mkdir tmp && mkdir data

    - run: ls
    - run: mv artifact-*/*.zip tmp

    - name: unzip artifact
      run: unzip -o '*.zip'
      working-directory: ./tmp

    - run: mv */searchable*.json ../data
      working-directory: ./tmp

    - run: rm -rf tmp
    - run: mv data sirin/ops/setup/data

    - run: rm .gitignore && pwd && ls
      working-directory: ./sirin

    - name: Push
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        FOLDER: sirin
        BRANCH: sirin
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MESSAGE: "Sirin"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker image
      run: docker build -t sirin .
      working-directory: ./sirin

    - name: Tag Docker image
      run: docker tag sirin $IMAGE_NAME

    - name: Push Docker image
      run: docker push $IMAGE_NAME

    - uses: deploys-app/deploys-action@v1
      with:
        project: hifumin
        location: gke.cluster-rcf2
        name: sirin-3rd
        image: ghcr.io/${{ github.repository_owner }}/sirin-3rd
        minReplicas: 2
        maxReplicas: 10
      env:
        DEPLOYS_AUTH_USER: ${{ secrets.DEPLOYS_AUTH_USER }}
        DEPLOYS_AUTH_PASS: ${{ secrets.DEPLOYS_AUTH_PASS }}

  # akashic-deploy:
  #   name: Deploy Akashic to deploys.app
  #   needs: [mirror]
  #   runs-on: ubuntu-latest
  #   env:
  #     IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/akashic:latest

  #   steps:
  #   - uses: actions/setup-node@v2
  #     with:
  #       node-version: '16'

  #   - name: Download artifact
  #     uses: actions/download-artifact@v2

  #   - run: npx degit https://github.com/saltyaom/akashic akashic
  #   - run: mkdir tmp && mkdir data

  #   - run: ls
  #   - run: mv artifact-*/*.zip tmp

  #   - name: unzip artifact
  #     run: unzip -o '*.zip'
  #     working-directory: ./tmp

  #   - run: rm -f */searchable*.json
  #     working-directory: ./tmp

  #   - run: find . -name '*.json' -exec mv -nt ../data {} +
  #     working-directory: ./tmp

  #   - run: rm -rf tmp
  #   - run: mv data akashic/data

  #   - run: rm .gitignore && pwd && ls
  #     working-directory: ./akashic

  #   - name: Push
  #     uses: s0/git-publish-subdir-action@develop
  #     env:
  #       REPO: self
  #       FOLDER: akashic
  #       BRANCH: akashic
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       MESSAGE: "Akashic"

  #   - name: Login to GitHub Container Registry
  #     uses: docker/login-action@v1
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.repository_owner }}
  #       password: ${{ secrets.GITHUB_TOKEN }}

  #   - name: Build Docker image
  #     run: docker build -t akashic .
  #     working-directory: ./akashic

  #   - name: Tag Docker image
  #     run: docker tag akashic $IMAGE_NAME

  #   - name: Push Docker image
  #     run: docker push $IMAGE_NAME

  #   - uses: deploys-app/deploys-action@v1
  #     with:
  #       project: hifumin
  #       location: gke.cluster-rcf2
  #       name: akashic
  #       image: ghcr.io/${{ github.repository_owner }}/akashic:latest
  #       minReplicas: 2
  #       maxReplicas: 10
  #     env:
  #       DEPLOYS_AUTH_USER: ${{ secrets.DEPLOYS_AUTH_USER }}
  #       DEPLOYS_AUTH_PASS: ${{ secrets.DEPLOYS_AUTH_PASS }}
